# Simple workflow for deploying static content to GitHub Pages
name: Post-Release Workflow

on:
  release:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  pullrequest:
    name: Create Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Sync branches
        # You may pin to the exact commit or the version.
        # uses: TreTuna/sync-branches@ea58ab6e406fd3ad016a064b31270bbb41127f41
        uses: TreTuna/sync-branches@1.4.0
        with:
          GITHUB_TOKEN: ${{ github.token }}
          FROM_BRANCH: main
          TO_BRANCH: prod
          PULL_REQUEST_TITLE: Sync development branch to production
          PULL_REQUEST_BODY: |
             Will update the `prod` branch (production branch designed for importing) to use
             the current release contents.
          CONTENT_COMPARISON: true
  deploy:
    name: Deploy to GH Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
